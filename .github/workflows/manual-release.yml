name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0, 1.0.0-beta.1)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
        default: patch

jobs:
  manual-release:
    name: Manual Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build package
      run: npm run build
    
    - name: Update version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
        else
          npm version ${{ github.event.inputs.release_type }}
        fi
    
    - name: Get new version
      id: version
      run: echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
    
    - name: Commit version bump
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to v${{ steps.version.outputs.new_version }}"
        git tag "v${{ steps.version.outputs.new_version }}"
    
    - name: Push changes
      run: |
        git push origin main
        git push origin "v${{ steps.version.outputs.new_version }}"
    
    - name: Publish to NPM
      run: npm publish --provenance --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        NPM_CONFIG_PROVENANCE: true